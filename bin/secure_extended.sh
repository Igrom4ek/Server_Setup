#!/bin/bash
set -e

CONFIG_FILE="/usr/local/bin/config.json"
LOG="/var/log/secure-server-setup.log"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ jq
if ! command -v jq &>/dev/null; then
  echo "[+] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º jq..." | tee -a "$LOG"
  apt install jq -y
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è config.json
if [[ ! -f "$CONFIG_FILE" ]]; then
  echo "‚ùå –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $CONFIG_FILE" | tee -a "$LOG"
  exit 1
fi

# –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ config.json
BOT_TOKEN=$(jq -r '.telegram_bot_token' "$CONFIG_FILE")
CHAT_ID=$(jq -r '.telegram_chat_id' "$CONFIG_FILE")
UFW_ENABLED=$(jq -r '.services.ufw // true' "$CONFIG_FILE")
FAIL2BAN_ENABLED=$(jq -r '.services.fail2ban // true' "$CONFIG_FILE")
PSAD_ENABLED=$(jq -r '.services.psad // true' "$CONFIG_FILE")
RKHUNTER_ENABLED=$(jq -r '.services.rkhunter // true' "$CONFIG_FILE")

echo "=== –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ ‚Äî $(date) ===" | tee -a "$LOG"

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
send_telegram() {
  MESSAGE="$1"
  if [[ "$BOT_TOKEN" != "null" && "$CHAT_ID" != "null" ]]; then
    curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" \
      -d chat_id="$CHAT_ID" \
      -d parse_mode="Markdown" \
      -d text="$MESSAGE" > /dev/null
  fi
}

# UFW
if [[ "$UFW_ENABLED" == "true" ]]; then
  if ! command -v ufw &>/dev/null; then
    echo "[+] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ufw..." | tee -a "$LOG"
    apt install ufw -y
  fi
  ufw allow ssh
  ufw --force enable
  echo "[‚úì] ufw –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω" | tee -a "$LOG"
fi

# FAIL2BAN
if [[ "$FAIL2BAN_ENABLED" == "true" ]]; then
  if ! command -v fail2ban-client &>/dev/null; then
    echo "[+] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º fail2ban..." | tee -a "$LOG"
    apt install fail2ban -y
  fi
  systemctl enable --now fail2ban
  echo "[‚úì] fail2ban —Ä–∞–±–æ—Ç–∞–µ—Ç" | tee -a "$LOG"
fi

# RKHUNTER
if [[ "$RKHUNTER_ENABLED" == "true" ]]; then
  if ! command -v rkhunter &>/dev/null; then
    echo "[+] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º rkhunter..." | tee -a "$LOG"
    apt install rkhunter -y
  fi
  rkhunter --update
  rkhunter --propupd
  echo "[‚úì] rkhunter –æ–±–Ω–æ–≤–ª—ë–Ω –∏ –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω" | tee -a "$LOG"
fi

# PSAD
if [[ "$PSAD_ENABLED" == "true" ]]; then
  if ! command -v psad &>/dev/null; then
    echo "[+] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º psad..." | tee -a "$LOG"
    apt install psad -y
  fi
  iptables -A INPUT -j LOG
  iptables -A FORWARD -j LOG
  systemctl enable --now psad
  psad --sig-update
  echo "[‚úì] psad –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤" | tee -a "$LOG"
fi

# –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram –æ–± —É—Å–ø–µ—à–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–µ
SERVICES=""
[[ "$UFW_ENABLED" == "true" ]] && SERVICES="$SERVICES- UFW\n"
[[ "$FAIL2BAN_ENABLED" == "true" ]] && SERVICES="$SERVICES- Fail2Ban\n"
[[ "$PSAD_ENABLED" == "true" ]] && SERVICES="$SERVICES- PSAD\n"
[[ "$RKHUNTER_ENABLED" == "true" ]] && SERVICES="$SERVICES- RKHunter\n"
send_telegram "üõ°Ô∏è –°–µ—Ä–≤–µ—Ä *—É—Å–ø–µ—à–Ω–æ –∑–∞—â–∏—â—ë–Ω*! –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã:\n$SERVICES"
echo "‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram." | tee -a "$LOG"

# –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ SSH-–≤—Ö–æ–¥–µ
echo "[+] –°–æ–∑–¥–∞—ë–º —Å–∫—Ä–∏–ø—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—Ö–æ–¥–µ –ø–æ SSH..." | tee -a "$LOG"
tee /etc/profile.d/notify_login.sh > /dev/null <<EOF
#!/bin/bash
BOT_TOKEN="${BOT_TOKEN}"
CHAT_ID="${CHAT_ID}"
USER_NAME=\$(whoami)
IP_ADDR=\$(who | awk '{print \$5}' | sed 's/[()]//g')
HOSTNAME=\$(hostname)
LOGIN_TIME=\$(date "+%Y-%m-%d %H:%M:%S")
MESSAGE="üîê SSH-–≤—Ö–æ–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä *\${HOSTNAME}*\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: *\${USER_NAME}*\nüïí –í—Ä–µ–º—è: *\${LOGIN_TIME}*\nüåê IP: \\\`\${IP_ADDR:-unknown}\\\`"
echo "\$LOGIN_TIME | SSH login: \$USER_NAME from \$IP_ADDR" >> /var/log/login_notify.log
curl -s -X POST "https://api.telegram.org/bot\${BOT_TOKEN}/sendMessage" \
  -d chat_id="\${CHAT_ID}" \
  -d parse_mode="Markdown" \
  -d text="\${MESSAGE}" > /dev/null
EOF
chmod +x /etc/profile.d/notify_login.sh
echo "[‚úì] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ SSH-–≤—Ö–æ–¥–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ" | tee -a "$LOG"

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –æ—á–∏—Å—Ç–∫–∏ –ª–æ–≥–∞
echo "[+] –°–æ–∑–¥–∞—ë–º —Å–∫—Ä–∏–ø—Ç –æ—á–∏—Å—Ç–∫–∏ –ª–æ–≥–æ–≤..." | tee -a "$LOG"
tee /usr/local/bin/clear_security_log.sh > /dev/null <<EOF
#!/bin/bash
LOG_FILE="\$(jq -r '.security_log_file // "/var/log/security_monitor.log"' "$CONFIG_FILE")"
echo "\$(date '+%Y-%m-%d %H:%M:%S') | üßπ –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (–µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ)" > "\$LOG_FILE"
EOF
chmod +x /usr/local/bin/clear_security_log.sh

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ crontab
CLEAR_LOGS_CRON=$(jq -r '.clear_logs_cron // "0 5 * * 0"' "$CONFIG_FILE")
SECURITY_CHECK_CRON=$(jq -r '.security_check_cron // "0 6 * * *"' "$CONFIG_FILE")
echo "[+] –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º crontab..." | tee -a "$LOG"
( crontab -l 2>/dev/null; echo "$SECURITY_CHECK_CRON /usr/local/bin/security_monitor.sh" ) | crontab -
( crontab -l 2>/dev/null; echo "$CLEAR_LOGS_CRON /usr/local/bin/clear_security_log.sh" ) | sort -u | crontab -
echo "[‚úì] Crontab –æ–±–Ω–æ–≤–ª—ë–Ω" | tee -a "$LOG"

# –§–∏–Ω–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
send_telegram "üì¨ –ù–∞—Å—Ç—Ä–æ–µ–Ω—ã:\n- –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –≤—Ö–æ–¥–µ\n- –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤\n- Cron-–∑–∞–¥–∞—á–∏ –∞–∫—Ç–∏–≤–Ω—ã"
echo "üöÄ –í—Å—ë –≥–æ—Ç–æ–≤–æ!" | tee -a "$LOG"