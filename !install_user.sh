#!/bin/bash
set -e
CONFIG_FILE="/usr/local/bin/config.json"
PUBKEY=$(jq -r '.public_key_content' "$CONFIG_FILE")
PORT=$(jq -r '.port' "$CONFIG_FILE")
SSH_DISABLE_ROOT=$(jq -r '.ssh_disable_root' "$CONFIG_FILE")
SSH_PASSWORD_AUTH=$(jq -r '.ssh_password_auth' "$CONFIG_FILE")
USERNAME=$(whoami)

log() {
  echo "$(date '+%Y-%m-%d %H:%M:%S') | $1"
}

log "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ ~/.ssh –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–ª—é—á–µ–π"
mkdir -p ~/.ssh
chmod 700 ~/.ssh
cd ~/.ssh
touch authorized_keys
chmod 600 authorized_keys

log "üîë –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞"
echo "$PUBKEY" > authorized_keys

log "üõ† –ù–∞—Å—Ç—Ä–æ–π–∫–∞ /etc/ssh/sshd_config"
sudo sed -i "s/^#\?Port .*/Port $PORT/" /etc/ssh/sshd_config
if [[ "$SSH_DISABLE_ROOT" == "true" ]]; then
  sudo sed -i "s/^#\?PermitRootLogin .*/PermitRootLogin no/" /etc/ssh/sshd_config
fi
if [[ "$SSH_PASSWORD_AUTH" == "false" ]]; then
  sudo sed -i "s/^#\?PasswordAuthentication .*/PasswordAuthentication no/" /etc/ssh/sshd_config
fi

log "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ SSH"
sudo service ssh restart

log "üîì –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è –¥–ª—è sudo (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)"
SUDO_NOPASSWD=$(jq -r '.sudo_nopasswd' "$CONFIG_FILE")
if [[ "$SUDO_NOPASSWD" == "true" ]]; then
  echo "$USERNAME ALL=(ALL) NOPASSWD: ALL" | sudo tee "/etc/sudoers.d/90-$USERNAME" > /dev/null
  sudo chmod 440 "/etc/sudoers.d/90-$USERNAME"
fi

log "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ì–æ—Ç–æ–≤–æ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É (–∑–∞—â–∏—Ç–∞, –±–æ—Ç, —á–µ–∫–ª–∏—Å—Ç)"


log "üõ° –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∑–∞—â–∏—Ç—ã"

for SERVICE in ufw fail2ban psad rkhunter nmap; do
  if [[ "$(jq -r ".services.$SERVICE" "$CONFIG_FILE")" == "true" ]]; then
    sudo apt install -y "$SERVICE"
    if systemctl list-unit-files | grep -q "^$SERVICE.service"; then
      sudo systemctl enable --now "$SERVICE"
      log "$SERVICE –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"
    else
      log "$SERVICE –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç systemd ‚Äî –ø—Ä–æ–ø—É—â–µ–Ω–æ"
    fi
  else
    log "$SERVICE –æ—Ç–∫–ª—é—á—ë–Ω –≤ config.json"
  fi
done

log "üì¶ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ rkhunter"
sudo rkhunter --propupd || true
sudo tee /etc/systemd/system/rkhunter.service > /dev/null <<EOF
[Unit]
Description=Rootkit Hunter Service
After=network.target
[Service]
ExecStart=/usr/bin/rkhunter --cronjob
Restart=on-failure
[Install]
WantedBy=multi-user.target
EOF
sudo systemctl daemon-reexec
sudo systemctl enable --now rkhunter.service
echo "0 1 * * * root /usr/bin/rkhunter --check --cronjob" | sudo tee /etc/cron.d/rkhunter-daily > /dev/null

if [[ "$(jq -r '.monitoring_enabled' "$CONFIG_FILE")" == "true" ]]; then
  log "üìä –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Netdata"
  curl -Ss https://my-netdata.io/kickstart.sh -o /tmp/netdata_installer.sh
  sudo bash /tmp/netdata_installer.sh --dont-wait || log "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Netdata"
fi

log "ü§ñ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ Telegram-–±–æ—Ç–∞"
sudo tee /usr/local/bin/telegram_command_listener.sh > /dev/null <<EOF
#!/bin/bash

TOKEN="8019987480:AAEJdUAAiGqlTFjOahWNh3RY5hiEwo3-E54"
CHAT_ID="543102005"
OFFSET_FILE="$HOME/.cache/telegram_bot_offset"
LAST_COMMAND_FILE="$HOME/.cache/telegram_last_command"
REBOOT_FLAG_FILE="$HOME/.cache/telegram_confirm_reboot"
LOG_FILE="/tmp/bot_debug.log"

mkdir -p "$(dirname "$OFFSET_FILE")"
exec >>"$LOG_FILE" 2>&1
set -x

OFFSET=$(cat "$OFFSET_FILE" 2>/dev/null || echo 0)

send_message() {
  local text="$1"
  curl -s -X POST "https://api.telegram.org/bot$TOKEN/sendMessage" \
    -d chat_id="$CHAT_ID" -d parse_mode="Markdown" -d text="$text" > /dev/null
}

get_updates() {
  curl -s "https://api.telegram.org/bot$TOKEN/getUpdates?offset=$OFFSET"
}

while true; do
  RESPONSE=$(get_updates)
  UPDATES=$(echo "$RESPONSE" | jq -c '.result')
  LENGTH=$(echo "$UPDATES" | jq 'length')
  [[ "$LENGTH" -eq 0 ]] && sleep 2 && continue

  for ((i = 0; i < LENGTH; i++)); do
    UPDATE=$(echo "$UPDATES" | jq -c ".[$i]")
    UPDATE_ID=$(echo "$UPDATE" | jq '.update_id')
    MESSAGE=$(echo "$UPDATE" | jq -r '.message.text')
    OFFSET=$((UPDATE_ID + 1))
    echo "$OFFSET" > "$OFFSET_FILE"

    NOW=$(date +%s)
    LAST_CMD=$(cat "$LAST_COMMAND_FILE" 2>/dev/null || echo "0")
    DIFF=$((NOW - LAST_CMD))
    [[ "$DIFF" -lt 3 ]] && continue
    echo "$NOW" > "$LAST_COMMAND_FILE"

    case "$MESSAGE" in
      /help | help)
        send_message "*–ö–æ–º–∞–Ω–¥—ã:*
/uptime ‚Äî –∞–ø—Ç–∞–π–º
/disk ‚Äî –¥–∏—Å–∫
/mem ‚Äî –ø–∞–º—è—Ç—å
/top ‚Äî —Ç–æ–ø –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
/who ‚Äî –∫—Ç–æ –≤ —Å–∏—Å—Ç–µ–º–µ + –≥–µ–æ
/ip ‚Äî IP + –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è
/security ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ rkhunter + psad
/reboot ‚Äî –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
/confirm_reboot ‚Äî –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É
/restart_bot ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
/botlog ‚Äî –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –±–æ—Ç–∞"
        ;;
      /uptime)
        send_message "*–ê–ø—Ç–∞–π–º:* $(uptime -p)"
        ;;
      /disk)
        send_message "\`\`\`
$(df -h /)
\`\`\`"
        ;;
      /mem)
        send_message "\`\`\`
$(free -h)
\`\`\`"
        ;;
      /top)
        send_message "\`\`\`
$(ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%cpu | head -n 10)
\`\`\`"
        ;;
      /who)
        WHO_WITH_GEO=""
        while read -r user tty date time ip; do
          IP=$(echo "$ip" | tr -d '()')
          GEO=$(curl -s ipinfo.io/$IP | jq -r '.city + ", " + .region + ", " + .country + " (" + .org + ")"')
          WHO_WITH_GEO+="üë§ $user ‚Äî $IP
üåç $GEO

"
        done <<< "$(who | awk '{print $1, $2, $3, $4, $5}')"
        send_message "*–°–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:*

$WHO_WITH_GEO"
        ;;
      /ip)
        IP_INT=$(hostname -I | awk '{print $1}')
        IP_EXT=$(curl -s ifconfig.me)
        GEO=$(curl -s ipinfo.io/$IP_EXT | jq -r '.city + ", " + .region + ", " + .country + " (" + .org + ")"')
        send_message "*–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π IP:* \`$IP_INT\`
*–í–Ω–µ—à–Ω–∏–π IP:* \`$IP_EXT\`
üåç *–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è:* $GEO"
        ;;
      /security)
        send_message "‚è≥ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 30 —Å–µ–∫—É–Ω–¥..."
        RKHUNTER_RESULT=$(sudo rkhunter --check --sk --nocolors | tail -n 100 || echo "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ rkhunter")
        PSAD_RESULT=$(grep "Danger level" /var/log/psad/alert | tail -n 5 || echo "psad –ª–æ–≥ –ø—É—Å—Ç")
        send_message "*RKHunter (–ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏):*
\`\`\`
$RKHUNTER_RESULT
\`\`\`

*PSAD:*
\`\`\`
$PSAD_RESULT
\`\`\`"
        ;;
      /reboot)
        echo "1" > "$REBOOT_FLAG_FILE"
        send_message "‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É —Å–µ—Ä–≤–µ—Ä–∞ –∫–æ–º–∞–Ω–¥–æ–π */confirm_reboot*"
        ;;
      /confirm_reboot)
        if [[ -f "$REBOOT_FLAG_FILE" ]]; then
          send_message "‚ôªÔ∏è –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞..."
          rm -f "$REBOOT_FLAG_FILE"
          sleep 2
          sudo reboot
        else
          send_message "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É."
        fi
        ;;
      /restart_bot)
        send_message "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞..."
        sleep 1
        sudo systemctl restart telegram_command_listener.service
        exit 0
        ;;
      /botlog)
        LOG=$(tail -n 30 "$LOG_FILE" 2>/dev/null || echo "–õ–æ–≥ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")
        send_message "*–õ–æ–≥ –±–æ—Ç–∞:*
\`\`\`
$LOG
\`\`\`"
        ;;
      *)
        send_message "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ù–∞–ø–∏—à–∏ /help"
        ;;
    esac
  done
  sleep 2
done
EOF
sudo chmod +x /usr/local/bin/telegram_command_listener.sh

sudo tee /etc/systemd/system/telegram_command_listener.service > /dev/null <<EOF
[Unit]
Description=Telegram Command Listener
After=network.target

[Service]
ExecStart=/usr/local/bin/telegram_command_listener.sh
Restart=always
User=$USERNAME

[Install]
WantedBy=multi-user.target
EOF

sudo systemctl daemon-reexec
sudo systemctl daemon-reload
sudo systemctl enable --now telegram_command_listener.service
log "üîî –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –≤—Ö–æ–¥–µ –ø–æ SSH"
sudo tee /usr/local/bin/telegram_ssh_notify.sh > /dev/null <<EOF
#!/bin/bash

[[ "$PAM_TYPE" != "open_session" ]] && exit 0
[[ -z "$PAM_USER" || "$PAM_USER" == "sshd" ]] && exit 0

TOKEN="8019987480:AAEJdUAAiGqlTFjOahWNh3RY5hiEwo3-E54"
CHAT_ID="543102005"

USER="$PAM_USER"
IP=$(echo $SSH_CONNECTION | awk '{print $1}')
CACHE_FILE="/tmp/ssh_notify_${USER}_${IP}"

# –ï—Å–ª–∏ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–µ–∫—É–Ω–¥ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
if [[ -f "$CACHE_FILE" ]]; then
  LAST_TIME=$(cat "$CACHE_FILE")
  NOW=$(date +%s)
  DIFF=$((NOW - LAST_TIME))
  if [[ "$DIFF" -lt 10 ]]; then
    exit 0
  fi
fi

date +%s > "$CACHE_FILE"

GEO=$(curl -s ipinfo.io/$IP | jq -r '.city + ", " + .region + ", " + .country + " (" + .org + ")"')
TEXT="üîê SSH –≤—Ö–æ–¥: *$USER*
üì° IP: \`$IP\`
üåç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: $GEO
üïí –í—Ä–µ–º—è: $(date +'%Y-%m-%d %H:%M:%S')"

curl -s -X POST "https://api.telegram.org/bot$TOKEN/sendMessage" \
  -d chat_id="$CHAT_ID" \
  -d parse_mode="Markdown" \
  -d text="$TEXT"
EOF
sudo chmod +x /usr/local/bin/telegram_ssh_notify.sh

if ! grep -q telegram_ssh_notify.sh /etc/pam.d/sshd; then
  echo 'session optional pam_exec.so /usr/local/bin/telegram_ssh_notify.sh' | sudo tee -a /etc/pam.d/sshd > /dev/null
fi

log "üì¨ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ Telegram-—á–µ–∫–ª–∏—Å—Ç–∞"

CHECKLIST="/tmp/install_checklist.txt"
{
echo "–ß–µ–∫–ª–∏—Å—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏:"
echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $USERNAME"
echo "SSH –ø–æ—Ä—Ç: $PORT"
echo "–°–ª—É–∂–±—ã:"
for SERVICE in ufw fail2ban psad rkhunter; do
  sudo systemctl is-active --quiet "$SERVICE" && echo "  [+] $SERVICE" || echo "  [ ] $SERVICE"
done
echo "Telegram-–±–æ—Ç: –≤–∫–ª—é—á—ë–Ω"
echo "Netdata: http://$(hostname -I | awk '{print $1}'):19999"
} > "$CHECKLIST"

CHECK_MSG=$(cat "$CHECKLIST" | sed 's/`/\`/g')
curl -s -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" \
  -d chat_id="$CHAT_ID" -d parse_mode="Markdown" -d text="\`\`\`$CHECK_MSG\`\`\`" > /dev/null
rm "$CHECKLIST"

log "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"