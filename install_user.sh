#!/bin/bash
set -e
export DEBIAN_FRONTEND=noninteractive

if [[ $EUID -ne 0 ]]; then
  echo "‚ùå –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω —Å sudo!"
  exit 1
fi

CONFIG_FILE="/usr/local/bin/config.json"
KEY_FILE="/usr/local/bin/id_ed25519.pub"
LOG="$HOME/install_user.log"

log() {
  echo "$(date '+%Y-%m-%d %H:%M:%S') | $1" | tee -a "$LOG"
}

log "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $USER"

# === –ü–æ–¥–≥—Ä—É–∂–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ config.json ===
BOT_TOKEN=$(jq -r '.telegram_bot_token' "$CONFIG_FILE")
CHAT_ID=$(jq -r '.telegram_chat_id' "$CONFIG_FILE")
LABEL=$(jq -r '.telegram_server_label' "$CONFIG_FILE")
SECURITY_CHECK_CRON=$(jq -r '.cron_tasks.security_check' "$CONFIG_FILE")
CLEAR_LOG_CRON=$(jq -r '.cron_tasks.clear_logs' "$CONFIG_FILE")
MONITORING_ENABLED=$(jq -r '.monitoring_enabled' "$CONFIG_FILE")

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–∞–≤–∏–ª ===
log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ —Å–ª—É–∂–±"
rm -f /etc/polkit-1/rules.d/49-nopasswd.rules 2>/dev/null || true
rm -f /etc/sudoers.d/90-$USER 2>/dev/null || true

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ polkit –∏ sudo ===
log "üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∞ polkit –∏ sudo –±–µ–∑ –ø–∞—Ä–æ–ª—è"
mkdir -p /etc/polkit-1/rules.d
cat <<EOF > /etc/polkit-1/rules.d/49-nopasswd.rules
polkit.addRule(function(action, subject) {
  if (subject.isInGroup("sudo")) {
    return polkit.Result.YES;
  }
});
EOF
systemctl daemon-reexec

echo "$USER ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/90-$USER
chmod 440 /etc/sudoers.d/90-$USER
log "‚úÖ –ü–æ–ª–∏—Ç–∏–∫–∞ sudo –∏ polkit –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"

# === –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ ===
log "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∞–∫—Ç–∏–≤–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤"
for SERVICE in ufw fail2ban psad rkhunter nmap; do
  if [[ "$(jq -r ".services.$SERVICE" "$CONFIG_FILE")" == "true" ]]; then
    apt install -y "$SERVICE"
    if systemctl list-unit-files | grep -q "^$SERVICE.service"; then
      systemctl enable --now "$SERVICE"
      log "‚úÖ $SERVICE –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"
    else
      log "‚ÑπÔ∏è $SERVICE –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç systemd ‚Äî –ø—Ä–æ–ø—É—â–µ–Ω–æ"
    fi
  else
    log "‚ö†Ô∏è $SERVICE –æ—Ç–∫–ª—é—á—ë–Ω –≤ config.json"
  fi
done

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ rkhunter + systemd ===
log "üõ° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ rkhunter"
rkhunter --propupd || true
cat <<EOF > /etc/systemd/system/rkhunter.service
[Unit]
Description=Rootkit Hunter Service
After=network.target
[Service]
ExecStart=/usr/bin/rkhunter --cronjob
Restart=on-failure
[Install]
WantedBy=multi-user.target
EOF
systemctl daemon-reexec
systemctl enable --now rkhunter.service
echo "0 1 * * * root /usr/bin/rkhunter --check --cronjob" > /etc/cron.d/rkhunter-daily
log "‚úÖ rkhunter –Ω–∞—Å—Ç—Ä–æ–µ–Ω"

# === –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Netdata ===
if [[ "$MONITORING_ENABLED" == "true" ]]; then
  log "üì° –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Netdata"
  bash <(curl -Ss https://my-netdata.io/kickstart.sh) || log "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Netdata"
fi

# === Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –≤—Ö–æ–¥–µ ===
log "üì≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
cat > /etc/profile.d/notify_login.sh <<EOF
#!/bin/bash
BOT_TOKEN="$BOT_TOKEN"
CHAT_ID="$CHAT_ID"
LABEL="$LABEL"
USER_NAME=$(whoami)
IP_ADDR=\$(who | awk '{print \$5}' | sed 's/[()]//g')
HOSTNAME=\$(hostname)
LOGIN_TIME=\$(date "+%Y-%m-%d %H:%M:%S")
MESSAGE="üë§ SSH –≤—Ö–æ–¥: *\$USER_NAME*%0Aüíª \$HOSTNAME%0Aüïí \$LOGIN_TIME%0Aüåê IP: \\`\$IP_ADDR\\`%0A*Server:* \\`\$LABEL\\`"
curl -s -X POST "https://api.telegram.org/bot\$BOT_TOKEN/sendMessage" -d chat_id="\$CHAT_ID" -d parse_mode="Markdown" -d text="\$MESSAGE" > /dev/null
EOF
chmod +x /etc/profile.d/notify_login.sh

# === Cron-–∑–∞–¥–∞—á–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ ===
log "‚è± –ù–∞—Å—Ç—Ä–æ–π–∫–∞ cron-–∑–∞–¥–∞—á"
cat > /usr/local/bin/security_monitor.sh <<EOF
#!/bin/bash
echo "[monitor] $(date)" >> /var/log/security_monitor.log
EOF
chmod +x /usr/local/bin/security_monitor.sh

cat > /usr/local/bin/clear_security_log.sh <<EOF
#!/bin/bash
echo "[clear] $(date)" > /var/log/security_monitor.log
EOF
chmod +x /usr/local/bin/clear_security_log.sh

TEMP_CRON=$(mktemp)
crontab -l 2>/dev/null > "$TEMP_CRON" || true
grep -v 'security_monitor\|clear_security_log' "$TEMP_CRON" > "${TEMP_CRON}.new"
echo "$SECURITY_CHECK_CRON /usr/local/bin/security_monitor.sh" >> "${TEMP_CRON}.new"
echo "$CLEAR_LOG_CRON /usr/local/bin/clear_security_log.sh" >> "${TEMP_CRON}.new"
crontab "${TEMP_CRON}.new"
rm -f "$TEMP_CRON" "${TEMP_CRON}.new"
log "‚úÖ Cron-–∑–∞–¥–∞—á–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã"

# === –§–∏–Ω–∞–ª—å–Ω—ã–π —á–µ–∫–ª–∏—Å—Ç ===
CHECKLIST="/tmp/install_checklist.txt"
{
echo "üõ°Ô∏è –ß–µ–∫–ª–∏—Å—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏:"
echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $USER"
echo "–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
for SERVICE in ufw fail2ban psad rkhunter; do
  systemctl is-active --quiet "$SERVICE" && echo "  ‚úÖ $SERVICE" || echo "  ‚ùå $SERVICE"
done
echo "Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –≤–∫–ª—é—á–µ–Ω—ã"
echo "rkhunter: –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ /usr/bin/rkhunter --check"
echo "Cron-–∑–∞–¥–∞—á–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã"
} > "$CHECKLIST"

cat "$CHECKLIST"
curl -s -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" \
  -d chat_id="$CHAT_ID" -d parse_mode="Markdown" -d text="\\`\`\`$(cat "$CHECKLIST")\\`\`\`" > /dev/null
rm "$CHECKLIST"

log "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"