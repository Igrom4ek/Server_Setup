#!/bin/bash
set -e
export DEBIAN_FRONTEND=noninteractive

if [[ $EUID -ne 0 ]]; then
  echo "‚ùå –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω —Å sudo!"
  exit 1
fi

CONFIG_FILE="/usr/local/bin/config.json"
KEY_FILE="/usr/local/bin/id_ed25519.pub"
LOG="/var/log/install_user.log"

touch "$LOG"
log() {
  echo "$(date '+%Y-%m-%d %H:%M:%S') | $1" | tee -a "$LOG"
}

log "== –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $USER =="

BOT_TOKEN=$(jq -r '.telegram_bot_token' "$CONFIG_FILE")
CHAT_ID=$(jq -r '.telegram_chat_id' "$CONFIG_FILE")
LABEL=$(jq -r '.telegram_server_label' "$CONFIG_FILE")
SECURITY_CHECK_CRON=$(jq -r '.cron_tasks.security_check' "$CONFIG_FILE")
CLEAR_LOG_CRON=$(jq -r '.cron_tasks.clear_logs' "$CONFIG_FILE")
MONITORING_ENABLED=$(jq -r '.monitoring_enabled' "$CONFIG_FILE")

log "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π"
rm -f /etc/polkit-1/rules.d/49-nopasswd.rules 2>/dev/null || true
rm -f /etc/sudoers.d/90-$USER 2>/dev/null || true

log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ polkit –∏ sudo"
mkdir -p /etc/polkit-1/rules.d
cat <<EOF > /etc/polkit-1/rules.d/49-nopasswd.rules
polkit.addRule(function(action, subject) {
  if (subject.isInGroup("sudo")) {
    return polkit.Result.YES;
  }
});
EOF
systemctl daemon-reexec

echo "$USER ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/90-$USER
chmod 440 /etc/sudoers.d/90-$USER
log "–ü–æ–ª–∏—Ç–∏–∫–∞ sudo –∏ polkit –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"

log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∞–∫—Ç–∏–≤–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤"
for SERVICE in ufw fail2ban psad rkhunter nmap; do
  if [[ "$(jq -r ".services.$SERVICE" "$CONFIG_FILE")" == "true" ]]; then
    apt install -y "$SERVICE"
    if systemctl list-unit-files | grep -q "^$SERVICE.service"; then
      systemctl enable --now "$SERVICE"
      log "$SERVICE –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"
    else
      log "$SERVICE –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç systemd ‚Äî –ø—Ä–æ–ø—É—â–µ–Ω–æ"
    fi
  else
    log "$SERVICE –æ—Ç–∫–ª—é—á—ë–Ω –≤ config.json"
  fi
done

log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ rkhunter"
rkhunter --propupd || true
cat <<EOF > /etc/systemd/system/rkhunter.service
[Unit]
Description=Rootkit Hunter Service
After=network.target
[Service]
ExecStart=/usr/bin/rkhunter --cronjob
Restart=on-failure
[Install]
WantedBy=multi-user.target
EOF
systemctl daemon-reexec
systemctl enable --now rkhunter.service
echo "0 1 * * * root /usr/bin/rkhunter --check --cronjob" > /etc/cron.d/rkhunter-daily
log "rkhunter –Ω–∞—Å—Ç—Ä–æ–µ–Ω"

if [[ "$MONITORING_ENABLED" == "true" ]]; then
  log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Netdata"
  bash <(curl -SsL https://my-netdata.io/kickstart.sh) || log "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Netdata (–ø—Ä–æ–≤–µ—Ä—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏–ª–∏ URL)"
fi

log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–≤—Ö–æ–¥)"
cat <<'EOF' > /etc/profile.d/notify_login.sh
#!/bin/bash
BOT_TOKEN="8019987480:AAEJdUAAiGqlTFjOahWNh3RY5hiEwo3-E54"
CHAT_ID="543102005"
LABEL="üåç –°–µ—Ä–≤–µ—Ä: 77.73.235.118 (–õ–∞—Ç–≤–∏—è)"
USER_NAME=$(whoami)
IP_ADDR=$(who | awk '{print $5}' | sed 's/[()]//g')
HOSTNAME=$(hostname)
LOGIN_TIME=$(date "+%Y-%m-%d %H:%M:%S")
MESSAGE="üõ°Ô∏è *SSH –≤—Ö–æ–¥*
üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: \`\`\`$USER_NAME\`\`\`
üñ•Ô∏è –•–æ—Å—Ç: \`\`\`$HOSTNAME\`\`\`
‚è±Ô∏è –í—Ä–µ–º—è: \`\`\`$LOGIN_TIME\`\`\`
üåê IP: \`\`\`$IP_ADDR\`\`\`
üì° –°–µ—Ä–≤–µ—Ä: \`\`\`$LABEL\`\`\`"
curl -s -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" \
  -d chat_id="$CHAT_ID" \
  -d parse_mode="Markdown" \
  --data-urlencode "text=$MESSAGE" > /dev/null
EOF
chmod +x /etc/profile.d/notify_login.sh

log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ cron-–∑–∞–¥–∞—á –∏ security_monitor"
cat > /usr/local/bin/security_monitor.sh <<'EOF'
#!/bin/bash
LOG="/var/log/security_monitor.log"
BOT_TOKEN="8019987480:AAEJdUAAiGqlTFjOahWNh3RY5hiEwo3-E54"
CHAT_ID="543102005"
LABEL="üåç –°–µ—Ä–≤–µ—Ä: 77.73.235.118 (–õ–∞—Ç–≤–∏—è)"

send() {
  curl -s -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" \
    -d chat_id="$CHAT_ID" \
    -d parse_mode="Markdown" \
    --data-urlencode "text=$1%0Aüì° –°–µ—Ä–≤–µ—Ä: \`\`\`$LABEL\`\`\`" > /dev/null
}

echo "$(date '+%F %T') | üîç –ü—Ä–æ–≤–µ—Ä–∫–∞" >> "$LOG"

if command -v rkhunter &>/dev/null; then
  RKHUNTER_RESULT=$(rkhunter --configfile /etc/rkhunter.conf --check --sk --nocolors --rwo 2>/dev/null || true)
  [[ -n "$RKHUNTER_RESULT" ]] && send "üïµÔ∏è *RKHunter:*%0A\`\`\`$RKHUNTER_RESULT\`\`\`"
fi

if command -v psad &>/dev/null; then
  PSAD_RESULT=$(grep "Danger level" /var/log/psad/alert | tail -n 5 || true)
  [[ -n "$PSAD_RESULT" ]] && send "üö® *PSAD:*%0A\`\`\`$PSAD_RESULT\`\`\`"
fi
EOF
chmod +x /usr/local/bin/security_monitor.sh

cat > /usr/local/bin/clear_security_log.sh <<EOF
#!/bin/bash
echo "[clear] $(date)" > /var/log/security_monitor.log
EOF
chmod +x /usr/local/bin/clear_security_log.sh

TEMP_CRON=$(mktemp)
crontab -l 2>/dev/null > "$TEMP_CRON" || true
grep -v 'security_monitor\|clear_security_log' "$TEMP_CRON" > "${TEMP_CRON}.new"
echo "$SECURITY_CHECK_CRON /usr/local/bin/security_monitor.sh" >> "${TEMP_CRON}.new"
echo "$CLEAR_LOG_CRON /usr/local/bin/clear_security_log.sh" >> "${TEMP_CRON}.new"
crontab "${TEMP_CRON}.new"
rm -f "$TEMP_CRON" "${TEMP_CRON}.new"

CHECKLIST="/tmp/install_checklist.txt"
{
echo "–ß–µ–∫–ª–∏—Å—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏:"
echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $USER"
echo "–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
for SERVICE in ufw fail2ban psad rkhunter; do
  systemctl is-active --quiet "$SERVICE" && echo "  [+] $SERVICE" || echo "  [ ] $SERVICE"
done
echo "Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –≤–∫–ª—é—á–µ–Ω—ã"
echo "rkhunter: –¥–æ—Å—Ç—É–ø–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ /usr/bin/rkhunter --check"
echo "Cron-–∑–∞–¥–∞—á–∏: –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
} > "$CHECKLIST"

CHECK_MSG=$(cat "$CHECKLIST" | sed 's/`/\`/g')
cat "$CHECKLIST"
curl -s -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" \
  -d chat_id="$CHAT_ID" -d parse_mode="Markdown" \
  --data-urlencode "text=üìù *–ò—Ç–æ–≥ —É—Å—Ç–∞–Ω–æ–≤–∫–∏*\n\`\`\`\n$CHECK_MSG\n\`\`\`" > /dev/null
rm "$CHECKLIST"

log "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
