#!/bin/bash
export HOME="$USER_HOME_DIR"
TOKEN="$BOT_TOKEN"
CHAT_ID="$CHAT_ID"

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ (–¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é)
DATA_DIR="$HOME/.local/share/telegram_bot"
mkdir -p "$DATA_DIR"
OFFSET_FILE="$DATA_DIR/offset"
LAST_COMMAND_FILE="$DATA_DIR/last_command"
REBOOT_FLAG_FILE="$DATA_DIR/reboot_flag"
LOG_FILE="$DATA_DIR/bot_debug.log"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –¥–µ–π—Å—Ç–≤–∏–π –±–æ—Ç–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
exec >>"$LOG_FILE" 2>&1
set -x

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–º–µ—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
OFFSET=$(cat "$OFFSET_FILE" 2>/dev/null || echo 0)

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–±—ã—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
send_message() {
  local text="$1"
  curl -s -X POST "https://api.telegram.org/bot${TOKEN}/sendMessage" \
    --data-urlencode chat_id="${CHAT_ID}" \
    --data-urlencode parse_mode="Markdown" \
    --data-urlencode text="${text}" > /dev/null
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏ (–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π)
send_keyboard() {
  local text="$1"
  curl -s -X POST "https://api.telegram.org/bot${TOKEN}/sendMessage" \
    -d chat_id="${CHAT_ID}" -d parse_mode="Markdown" \
    --data-urlencode text="${text}" \
    --data-urlencode reply_markup='{
      "inline_keyboard": [
        [ {"text":"üñ• Uptime","callback_data":"uptime"}, {"text":"üíæ Disk","callback_data":"disk"} ],
        [ {"text":"üß† Memory","callback_data":"mem"}, {"text":"üìà Top","callback_data":"top"} ],
        [ {"text":"üë• Who","callback_data":"who"}, {"text":"üåê IP","callback_data":"ip"} ],
        [ {"text":"üîí Security Check","callback_data":"security"} ],
        [ {"text":"üßπ –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏ PSAD","callback_data":"clear_psad"} ],
        [ {"text":"üìã –ß–µ–∫-–ª–∏—Å—Ç","callback_data":"checklist"} ],
        [ {"text":"‚ôªÔ∏è Reboot","callback_data":"reboot"}, {"text":"üîÑ Restart Bot","callback_data":"restart_bot"} ]
      ]
    }' > /dev/null
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ callback (–¥–ª—è —Å–Ω—è—Ç–∏—è "—á–∞—Å–∏–∫–æ–≤" Telegram)
answer_callback() {
  local cid="$1"
  local msg="${2:-}"
  local alert="${3:-false}"
  if [[ -z "$msg" ]]; then
    curl -s -X POST "https://api.telegram.org/bot${TOKEN}/answerCallbackQuery" \
      -d callback_query_id="$cid" > /dev/null
  else
    curl -s -X POST "https://api.telegram.org/bot${TOKEN}/answerCallbackQuery" \
      -d callback_query_id="$cid" \
      --data-urlencode text="$msg" \
      -d show_alert="$alert" > /dev/null
  fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç Telegram
get_updates() {
  curl -s "https://api.telegram.org/bot${TOKEN}/getUpdates?offset=${OFFSET}"
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
while true; do
  RESPONSE=$(get_updates)
  UPDATES=$(echo "$RESPONSE" | jq -c ".result")
  LENGTH=$(echo "$UPDATES" | jq "length")
  [[ "$LENGTH" -eq 0 ]] && sleep 2 && continue

  for ((i = 0; i < $LENGTH; i++)); do
    UPDATE=$(echo "$UPDATES" | jq -c ".[$i]")
    UPDATE_ID=$(echo "$UPDATE" | jq ".update_id")
    OFFSET=$((UPDATE_ID + 1))
    echo "$OFFSET" > "$OFFSET_FILE"

    # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ –¥–∞–Ω–Ω—ã—Ö callback
    MESSAGE_TEXT=$(echo "$UPDATE" | jq -r ".message.text // empty")
    CALLBACK_DATA=$(echo "$UPDATE" | jq -r ".callback_query.data // empty")
    CALLBACK_ID=$(echo "$UPDATE" | jq -r ".callback_query.id // empty")

    # –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç—ã—Ö –ø–æ–≤—Ç–æ—Ä–æ–≤ (–¥–µ–±–∞—É–Ω—Å 3 —Å–µ–∫—É–Ω–¥—ã)
    NOW=$(date +%s)
    LAST_CMD=$(cat "$LAST_COMMAND_FILE" 2>/dev/null || echo "0")
    DIFF=$((NOW - LAST_CMD))
    [[ "$DIFF" -lt 3 ]] && continue
    echo "$NOW" > "$LAST_COMMAND_FILE"

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç callback_data)
    if [[ -n "$CALLBACK_DATA" ]]; then
      CMD="$CALLBACK_DATA"
    elif [[ -n "$MESSAGE_TEXT" ]]; then
      CMD="$MESSAGE_TEXT"
    else
      continue
    fi

    case "$CMD" in
      "/start" | "/help" | "help")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
        send_keyboard "*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*"
        ;;

      "/uptime" | "uptime")
        send_message "*–ê–ø—Ç–∞–π–º:* $(uptime -p)"
        ;;

      "/disk" | "disk")
        send_message " \`\`\`$(df -h /)\`\`\`"
        ;;

      "/mem" | "mem")
        send_message " \`\`\`$(free -h)\`\`\`"
        ;;

      "/top" | "top")
        send_message " \`\`\`$(ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%cpu | head -n 10)\`\`\`"
        ;;

      "/who" | "who")
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–∏—Ö —Å–µ—Å—Å–∏—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π
        WHO_INFO=""
        while read -r user tty date time ip; do
          IP_ADDR=$(echo "$ip" | tr -d "()")
          GEO=$(curl -s ipinfo.io/$IP_ADDR | jq -r '.city + ", " + .region + ", " + .country + " (" + .org + ")"')
          WHO_INFO+="üë§ $user ‚Äî $IP_ADDR\nüåç $GEO\n\n"
        done <<< "$(who | awk '{print $1, $2, $3, $4, $5}')"
        send_message "*–°–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:*\n\n${WHO_INFO}"
        ;;

      "/ip" | "ip")
        # –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∏ –≤–Ω–µ—à–Ω–∏–π IP + –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ IP
        IP_INT=$(hostname -I | awk '{print $1}')
        IP_EXT=$(curl -s ifconfig.me)
        GEO=$(curl -s ipinfo.io/$IP_EXT | jq -r '.city + ", " + .region + ", " + .country + " (" + .org + ")"')
        send_message "*–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π IP:* \`$IP_INT\`\n*–í–Ω–µ—à–Ω–∏–π IP:* \`$IP_EXT\`\nüåç *–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è:* $GEO"
        ;;

      "/security" | "security")
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã (–æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ –¥–ª—è callback, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä)
        if [[ -n "$CALLBACK_ID" ]]; then
          answer_callback "$CALLBACK_ID" "‚è≥ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."
        fi
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ RKHunter (—Ç–∞–π–º–∞—É—Ç 30 —Å–µ–∫)
        OUT=$(timeout 30s sudo rkhunter --check --sk --nocolors --rwo || echo "RKHUNTER_TIMEOUT")
        if [[ "$OUT" == "RKHUNTER_TIMEOUT" ]]; then
          RKHUNTER_RESULT="‚ö†Ô∏è rkhunter –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞ 30 —Å–µ–∫—É–Ω–¥"
        else
          RKHUNTER_RESULT=$(echo "$OUT" | tail -n 100)
        fi
        # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ª–æ–≥–æ–≤ PSAD –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞
        if [[ -f /var/log/psad/alert ]]; then
          TODAY=$(date "+%b %_d")      # —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã, —Å–æ–≤–ø–∞–¥–∞—é—â–∏–π —Å –ª–æ–≥–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, "Sep 30")
          YEST=$(date -d "yesterday" "+%b %_d")
          PSAD_LINES=$(grep -E "$YEST|$TODAY" /var/log/psad/alert)
          PSAD_ALERTS_LASTDAY=$(echo "$PSAD_LINES" | grep "Danger level" | tail -n 20)
          [[ -z "$PSAD_ALERTS_LASTDAY" ]] && PSAD_ALERTS_LASTDAY="–õ–æ–≥ PSAD –ø—É—Å—Ç."
          TOP_IPS=$(echo "$PSAD_LINES" | grep -i "Danger level" | tail -n 10)
          [[ -z "$TOP_IPS" ]] && TOP_IPS="–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è—Ö."
        else
          PSAD_ALERTS_LASTDAY="psad –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –ª–æ–≥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."
          TOP_IPS=""
        fi
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –µ–¥–∏–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ—Ç—á–µ—Ç–æ–º
        send_message "*RKHunter:*\n\`\`\`${RKHUNTER_RESULT}\`\`\`\n\n*PSAD (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 24—á):*\n\`\`\`${PSAD_ALERTS_LASTDAY}\`\`\`\n\n*Top 10 IP (PSAD):*\n\`\`\`${TOP_IPS}\`\`\`"
        ;;

      "clear_psad")
        # –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤ PSAD
        if sudo truncate -s 0 /var/log/psad/alert 2>/dev/null; then
          send_message "üßπ –õ–æ–≥–∏ PSAD –æ—á–∏—â–µ–Ω—ã."
        else
          send_message "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏ PSAD (–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤)."
        fi
        ;;

      "checklist")
        # –°–±–æ—Ä —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã
        CHECKLIST="–ß–µ–∫-–ª–∏—Å—Ç —Å–∏—Å—Ç–µ–º—ã:\n"
        # –°—Ç–∞—Ç—É—Å—ã —Å–ª—É–∂–±
        CHECKLIST+="–°–ª—É–∂–±—ã:\n"
        for SERVICE in ufw fail2ban psad rkhunter; do
          if systemctl is-active --quiet "$SERVICE"; then
            CHECKLIST+="  [+] $SERVICE\n"
          else
            CHECKLIST+="  [ ] $SERVICE\n"
          fi
        done
        # –°—Ç–∞—Ç—É—Å Telegram-–±–æ—Ç–∞
        if systemctl is-active --quiet telegram_command_listener.service; then
          CHECKLIST+="  [+] Telegram-–±–æ—Ç\n"
        else
          CHECKLIST+="  [ ] Telegram-–±–æ—Ç\n"
        fi
        # –°—Ç–∞—Ç—É—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (Netdata)
        if pgrep -x "netdata" >/dev/null 2>&1; then
          IP=$(hostname -I | awk '{print $1}')
          CHECKLIST+="Netdata: http://$IP:19999 (–∞–∫—Ç–∏–≤–Ω–∞)\n"
        elif sudo docker ps -q -f name=netdata >/dev/null 2>&1; then
          IP=$(hostname -I | awk '{print $1}')
          CHECKLIST+="Netdata: http://$IP:19999 (Docker)\n"
        else
          CHECKLIST+="Netdata: –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞\n"
        fi
        # –û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã –∏ –ø—Ä–æ—Ü–µ—Å—Å—ã
        PORTS_INFO=$(sudo ss -tulpnH | awk '/LISTEN/ || /UNCONN/ {
            split($5,a,":"); 
            port=a[length(a)]; 
            proc=$NF; 
            if(proc == "-" || proc == "*") proc="-"; 
            else { sub(/users:\(\(/,"",proc); sub(/\).*/,"",proc); } 
            printf "    %s : %s\n", port, proc 
        }')
        if [[ -n "$PORTS_INFO" ]]; then
          CHECKLIST+="–û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã:\n$PORTS_INFO"
        else
          CHECKLIST+="–û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã: (–Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫)\n"
        fi
        # –ü–æ—Å–ª–µ–¥–Ω–∏–π —Å—Ç–∞—Ç—É—Å RKHunter –∏–∑ –ª–æ–≥–∞ (–µ–∂–µ–¥–Ω–µ–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)
        RKH_LAST=$(sudo grep "RKHunter" /var/log/security_monitor.log 2>/dev/null | tail -1)
        if [[ "$RKH_LAST" =~ "‚ö†Ô∏è" ]]; then
          CHECKLIST+="RKHunter: –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è\n"
        elif [[ "$RKH_LAST" =~ "‚úÖ" ]]; then
          CHECKLIST+="RKHunter: OK (—á–∏—Å—Ç–æ)\n"
        else
          CHECKLIST+="RKHunter: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö\n"
        fi
        # –ü–æ—Å–ª–µ–¥–Ω–∏–π —Å—Ç–∞—Ç—É—Å PSAD –∏–∑ –ª–æ–≥–∞
        PSAD_LAST=$(sudo grep "PSAD" /var/log/security_monitor.log 2>/dev/null | tail -1)
        if [[ "$PSAD_LAST" =~ "üö®" ]]; then
          CHECKLIST+="PSAD: –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n"
        elif [[ "$PSAD_LAST" =~ "‚úÖ" ]]; then
          CHECKLIST+="PSAD: OK (—Å–ø–æ–∫–æ–π–Ω–æ)\n"
        else
          CHECKLIST+="PSAD: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö\n"
        fi
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ–∫-–ª–∏—Å—Ç–∞ (–∫–∞–∫ –±–ª–æ–∫ –∫–æ–¥–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
        CHECKLIST_ESC=$(echo "$CHECKLIST" | sed 's/`/\\`/g')
        send_message "\`\`\`${CHECKLIST_ESC}\`\`\`"
        ;;

      "/reboot" | "reboot")
        echo "1" > "$REBOOT_FLAG_FILE"
        if [[ -n "$CALLBACK_ID" ]]; then
          # –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ ‚Äì –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
          curl -s -X POST "https://api.telegram.org/bot${TOKEN}/sendMessage" \
            -d chat_id="${CHAT_ID}" -d parse_mode="Markdown" \
            --data-urlencode text="‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É —Å–µ—Ä–≤–µ—Ä–∞" \
            --data-urlencode reply_markup='{"inline_keyboard":[[{"text":"‚úîÔ∏è –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å","callback_data":"confirm_reboot"},{"text":"‚ùå –û—Ç–º–µ–Ω–∞","callback_data":"cancel_reboot"}]]}' > /dev/null
          answer_callback "$CALLBACK_ID"
        else
          send_message "‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É –∫–æ–º–∞–Ω–¥–æ–π /confirm_reboot"
        fi
        ;;

      "confirm_reboot" | "/confirm_reboot")
        if [[ -f "$REBOOT_FLAG_FILE" ]]; then
          send_message "‚ôªÔ∏è –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞..."
          rm -f "$REBOOT_FLAG_FILE"
          sleep 2
          sudo reboot
        else
          send_message "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É."
        fi
        ;;

      "/restart_bot" | "restart_bot")
        send_message "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞..."
        sleep 1
        sudo systemctl restart telegram_command_listener.service
        exit 0
        ;;

      "/botlog" | "botlog")
        LOG=$(tail -n 30 "$LOG_FILE" 2>/dev/null || echo "–õ–æ–≥ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")
        send_message "*–õ–æ–≥ –±–æ—Ç–∞:*\n\`\`\`${LOG}\`\`\`"
        ;;

      "cancel_reboot")
        # –û—Ç–º–µ–Ω–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
        rm -f "$REBOOT_FLAG_FILE"
        send_message "–û—Ç–º–µ–Ω–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏."
        ;;

      *)
        send_message "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ù–∞–ø–∏—à–∏—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞."
        ;;
    esac

    # –ï—Å–ª–∏ –ø—Ä–∏—à—ë–ª callback_query, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –µ—â—ë –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª–∏, —É–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    if [[ -n "$CALLBACK_ID" ]]; then
      answer_callback "$CALLBACK_ID"
    fi
  done

  sleep 2
done
